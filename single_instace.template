{
    "Description": "Create EC2 instance include OS init configuration",
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {},
    "Resources": {
        "Server": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "KeyName"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "ServerName"
                        }
                    }
                ],
                "SecurityGroupIds": {
                    "Ref": "SecurityGroups"
                },
                "InstanceType": {
                    "Ref": "ServerInstanceType"
                },
                "SubnetId": {
                    "Ref": "ServerSubnets"
                },
                "ImageId": "ami-a77c30c1",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "VolumeSize": {
                                "Ref": "ServerVolumeSize"
                            }
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "whoami >> /tmp/init.log\n",
                                "yum update -y\n",
                                "echo 'update completed' >> /tmp/init.log\n",
                                "# Create users from the metadata\n",
                                "/opt/aws/bin/cfn-init -v --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource Server",
                                " --configsets CreateUsers,InitServer",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "echo 'init completed' >> /tmp/init.log\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "Comment1": "Create users.",
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "CreateUsers": [
                            "CreateUsers"
                        ],
                        "InitServer": [
                            "InitServer"
                        ]
                    },
                    "CreateUsers": {
                        "commands": {
                            "createuser": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "for user in",
                                            {
                                                "Ref": "ServerUser"
                                            },
                                            "; do useradd ${user}; ",
                                            "su - ${user} -c 'echo -e \"\\n\" | ssh-keygen -t rsa -N \"\"'; ",
                                            "su - ${user} -c 'cat .ssh/id_rsa.pub > .ssh/authorized_keys'; ",
                                            "su - ${user} -c 'chmod 600 .ssh/authorized_keys'; ",
                                            "echo -e \"\\necho 'Login key: ~/.ssh/id_rsa'\" >> /home/${user}/.bash_profile; ",
                                            "cp /etc/sudoers.d/cloud-init /etc/sudoers.d/${user}; ",
                                            "sed -i \"s/ec2-user/${user}/\" /etc/sudoers.d/${user}; ",
                                            "done"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "test -n \"",
                                            {
                                                "Ref": "ServerUser"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "InitServer": {
                        "services": {
                            "sysvinit": {
                                "iptables": {
                                    "enabled": "false",
                                    "ensureRunning": "false"
                                },
                                "ip6tables": {
                                    "enabled": "false",
                                    "ensureRunning": "false"
                                },
                                "acpid": {
                                    "enabled": {"Ref": "EnabledServiceAcpid"},
                                    "ensureRunning": {"Ref": "EnabledServiceAcpid"}
                                },
                                "atd": {
                                    "enabled": {"Ref": "EnabledServiceAtd"},
                                    "ensureRunning": {"Ref": "EnabledServiceAtd"}
                                },
                                "mdmonitor": {
                                    "enabled": {"Ref": "EnabledServiceMdmonitor"},
                                    "ensureRunning": {"Ref": "EnabledServiceMdmonitor"}
                                },
                                "netfs": {
                                    "enabled": {"Ref": "EnabledServiceNFS"},
                                    "ensureRunning": {"Ref": "EnabledServiceNFS"}
                                },
                                "nfslock": {
                                    "enabled": {"Ref": "EnabledServiceNFS"},
                                    "ensureRunning": {"Ref": "EnabledServiceNFS"}
                                },
                                "rpcbind": {
                                    "enabled": {"Ref": "EnabledServiceNFS"},
                                    "ensureRunning": {"Ref": "EnabledServiceNFS"}
                                },
                                "rpcgssd": {
                                    "enabled": {"Ref": "EnabledServiceNFS"},
                                    "ensureRunning": {"Ref": "EnabledServiceNFS"}
                                }
                            }
                        },
                        "packages": {
                            "yum": {
                                "dstat": []
                            }
                        },
                        "commands": {
                            "changeTimeZone": {
                                "command": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "sed -i 's/ZONE=\"UTC\"/ZONE=\"Japan\"/' /etc/sysconfig/clock",
                                            "ln -sf /usr/share/zoneinfo/Japan /etc/localtime"
                                        ]
                                    ]
                                }
                            },
                            "historySettings": {
                                "command": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "sed -i 's/HISTSIZE=.*/HISTSIZE=99999/' /etc/profile",
                                            "sed -i \"/HISTSIZE=/a HISTTIMEFORMAT='%Y/%m/%d %H:%M:%S '\" /etc/profile"
                                        ]
                                    ]
                                }
                            },
                            "setupSysctl": {
                                "command": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "cat >> /etc/sysctl.conf << EOF",
                                            "",
                                            "net.ipv4.tcp_tw_reuse = 1",
                                            "net.ipv4.tcp_tw_recycle = 0",
                                            "net.ipv4.tcp_fin_timeout = 10",
                                            "net.ipv4.tcp_max_syn_backlog = 20480",
                                            "net.ipv4.tcp_rmem = 4096 873800 1747600",
                                            "net.ipv4.tcp_wmem = 4096 873800 1747600",
                                            "net.ipv4.tcp_mem = 2048000 2048000 2048000",
                                            "net.ipv4.ip_local_port_range = 11000 65500",
                                            "net.ipv4.tcp_keepalive_time = 10",
                                            "net.ipv4.tcp_keepalive_probes = 4",
                                            "net.ipv4.tcp_keepalive_intvl = 5",
                                            "net.ipv4.tcp_rfc1337 = 1",
                                            "fs.file-max = 100000",
                                            "net.core.somaxconn = 65535",
                                            "EOF",
                                            "sysctl -p"
                                        ]
                                    ]
                                }
                            },
                            "setupLimits": {
                                "command": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "cat >> /etc/security/limits.d/90-nproc.conf << EOF",
                                            "*  soft    nproc   65535",
                                            "root   soft    nproc   unlimited",
                                            "EOF",
                                            "cat >> /etc/security/limits.conf << EOF",
                                            "",
                                            "*  soft nofile  65535",
                                            "*  hard nofile  65535",
                                            "EOF"
                                        ]
                                    ]
                                }
                            },
                            "addServerName": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "sed -i '/&& PS1/ s/\\h/\\h(",
                                            {
                                                "Ref": "ServerName"
                                            },
                                            ")/' /etc/bashrc"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "Parameters": {
        "ServerUser": {
            "Type": "String",
            "Description": "Add user to instance. Seperated by space. Example: user1 user2 user3 ..."
        },
        "ServerSubnets": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "ServerName": {
            "Type": "String",
            "Description": "The name of server.The name can contain only a-zA-Z0-9 and . and - and _. Max length is 20.",
            "Default": "MyServer",
            "AllowedPattern": "^[a-zA-Z0-9._-]{1,20}$",
            "ConstraintDescription": "The name can contain only a-zA-Z0-9 and . and - and _"
        },
        "SecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "SecurityGroups for server."
        },
        "ServerInstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "t3.nano",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "m5.24xlarge",
                "m5d.large",
                "m5d.xlarge",
                "m5d.2xlarge",
                "m5d.4xlarge",
                "m5d.12xlarge",
                "m5d.24xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.18xlarge",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
                "c5d.18xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.12xlarge",
                "r5.24xlarge",
                "r5d.large",
                "r5d.xlarge",
                "r5d.2xlarge",
                "r5d.4xlarge",
                "r5d.12xlarge",
                "r5d.24xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "ServerVolumeSize": {
            "Type": "Number",
            "Description": "The size of the volume, in GiBs. 1-16384 for gp2, 1-1024 for standard.",
            "Default": "50",
            "MinValue": "1",
            "MaxValue": "16384"
        },
        "EnabledServiceAcpid": {
            "Type": "String",
            "Default": "false",
            "Description": "acpid:Advanced Configuration and Power Interface event daemon. true or false.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "Parameter 'EnabledServiceAcpid' must be true or false."
        },
        "EnabledServiceAtd": {
            "Type": "String",
            "Default": "false",
            "Description": "atd:atd runs jobs queued by at. If you are not using at command disable it. true or false.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "Parameter 'EnabledServiceAtd' must be true or false."
        },
        "EnabledServiceMdmonitor": {
            "Type": "String",
            "Default": "false",
            "Description": "mdmonitor:software RAID monitoring and management service. If you are not using software RAID disable it. This is not required for hardware RAID setup as they comes with their own programs. true or false.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "Parameter 'EnabledServiceMdmonitor' must be true or false."
        },
        "EnabledServiceNFS": {
            "Type": "String",
            "Default": "false",
            "Description": "netfs, nfslock, rpcgssd, rpcidmapd, and portmap:Mount and configure Linux network network filesystems (NFS). If you are not using NFS client/server technology disable it. true or false.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "Parameter 'EnabledServiceNFS' must be true or false."
        }
    },
    "Mappings": {},
    "Conditions": {}
}
